library(RgoogleMaps)
GetMap(center = c(lat = mean(start_stations$start_station_latitude),
lon = mean(start_stations$start_station_longitude)),
)
GetMap(center = c(lat = mean(start_stations$start_station_latitude),
lon = mean(start_stations$start_station_longitude)),
zoom=zoom,
)
GetMap(center = c(lat = mean(start_stations$start_station_latitude),
lon = mean(start_stations$start_station_longitude)),
zoom=min(MaxZoom(range(start_stations$start_station_latitude), rang(start_stations$start_station_longitude))),
)
GetMap(center = c(lat = mean(start_stations$start_station_latitude),
lon = mean(start_stations$start_station_longitude)),
zoom=min(MaxZoom(range(start_stations$start_station_latitude), range(start_stations$start_station_longitude))),
)
GetMap(center = c(lat = mean(start_stations$start_station_latitude),
lon = mean(start_stations$start_station_longitude)),
destfile = "MyTile.png"
zoom=min(MaxZoom(range(start_stations$start_station_latitude), range(start_stations$start_station_longitude))),
GetMap(center = c(lat = mean(start_stations$start_station_latitude),
lon = mean(start_stations$start_station_longitude)),
destfile = "MyTile.png",
zoom=min(MaxZoom(range(start_stations$start_station_latitude), range(start_stations$start_station_longitude))),
maptype = "terrain"
)
citibikeMap <- GetMap(center=center,
zoom=zoom,
maptype="terrain",
destfile="citimap.png",
)
library(RgoogleMaps)
#We are giving the map 1 standard deviation bigger than the ends of the locations
long_min <- min(start_stations$start_station_longitude) - sd(start_stations$start_station_longitude)
long_max <-  max(start_stations$start_station_longitude) + sd(start_stations$start_station_longitude)
lat_min <- min(start_stations$start_station_latitude) - sd(start_stations$start_station_latitude)
lat_max <- min(start_stations$start_station_latitude) + sd(start_stations$start_station_latitude)
lon <- c(long_min, long_max)
lat <- c(lat_min, lat_max)
center <- c(mean(lat), mean(lon))
zoom <- 5
citibikeMap <- GetMap(center=center,
zoom=zoom,
maptype="terrain",
destfile="citimap.png",
)
zoom <- 1
library(RgoogleMaps)
#We are giving the map 1 standard deviation bigger than the ends of the locations
long_min <- min(start_stations$start_station_longitude) - sd(start_stations$start_station_longitude)
long_max <-  max(start_stations$start_station_longitude) + sd(start_stations$start_station_longitude)
lat_min <- min(start_stations$start_station_latitude) - sd(start_stations$start_station_latitude)
lat_max <- min(start_stations$start_station_latitude) + sd(start_stations$start_station_latitude)
lon <- c(long_min, long_max)
lat <- c(lat_min, lat_max)
center <- c(mean(lat), mean(lon))
zoom <- 1
citibikeMap <- GetMap(center=center,
zoom=zoom,
maptype="terrain",
destfile="citimap.png",
)
zoom <- min(MaxZoom(range(lat), range(lon)))
citibikeMap <- GetMap(center=center,
zoom=zoom,
maptype="terrain",
destfile="citimap.png",
)
library(RgoogleMaps)
#We are giving the map 1 standard deviation bigger than the ends of the locations
long_min <- min(start_stations$start_station_longitude)
long_max <-  max(start_stations$start_station_longitude)
lat_min <- min(start_stations$start_station_latitude)
lat_max <- min(start_stations$start_station_latitude)
lon <- c(long_min, long_max)
lat <- c(lat_min, lat_max)
center <- c(mean(lat), mean(lon))
zoom <- min(MaxZoom(range(lat), range(lon)))
citibikeMap <- GetMap(center=center,
zoom=zoom,
maptype="terrain",
destfile="citimap.png",
)
zoom
citibikeMap2 <- GetMap.bbox(lonR = range(lon),
latR = range(lat),
center = center,
destfile = "citistations.png",
markers = start_stations,
zoom = zoom,
maptype = "terrain")
mymarkers <- start_stations %>%
select(start_station_latitude, start_station_longitude, everything())
citibikeMap2 <- GetMap.bbox(lonR = range(lon),
latR = range(lat),
center = center,
destfile = "citistations.png",
markers = mymarkers,
zoom = zoom,
maptype = "terrain")
mymarkers <- start_stations %>%
select(start_station_latitude, start_station_longitude, everything()) %>%
rename(lat = start_station_latitude,
lon = start_station_longitude)
citibikeMap2 <- GetMap.bbox(lonR = range(lon),
latR = range(lat),
center = center,
destfile = "citistations.png",
markers = mymarkers,
zoom = zoom,
maptype = "terrain")
citibikeMap2 <- GetMap.bbox(lonR = range(lon),
latR = range(lat),
center = center,
destfile = "citistations.png",
markers = mymarkers,
zoom = zoom,
maptype = "terrain")
citibikeMap2 <- GetMap.bbox(lonR = range(lon),
latR = range(lat),
center = center,
destfile = "citistations.png",
markers = mymarkers,
zoom = zoom,
maptype = "terrain")
mymarkers
citibikeMap2 <- GetMap.bbox(lonR = range(lon),
latR = range(lat),
center = center,
destfile = "citistations.png",
zoom = zoom,
maptype = "terrain")
mymarkers <- start_stations %>%
select(start_station_latitude, start_station_longitude) %>%
rename(lat = start_station_latitude,
lon = start_station_longitude)
citibikeMap2 <- GetMap.bbox(lonR = range(lon),
latR = range(lat),
center = center,
destfile = "citistations.png",
markers = mymarkers,
zoom = zoom,
maptype = "terrain")
mymarkers <- start_stations %>%
select(start_station_latitude, start_station_longitude) %>%
rename(lat = start_station_latitude,
lon = start_station_longitude) %>%
mutate(size = "small",
col = "red",
char = "")
mymarkers
library(RgoogleMaps)
#We are giving the map 1 standard deviation bigger than the ends of the locations
long_min <- min(start_stations$start_station_longitude)
long_max <-  max(start_stations$start_station_longitude)
lat_min <- min(start_stations$start_station_latitude)
lat_max <- min(start_stations$start_station_latitude)
lon <- c(long_min, long_max)
lat <- c(lat_min, lat_max)
center <- c(mean(lat), mean(lon))
zoom <- min(MaxZoom(range(lat), range(lon)))
citibikeMap <- GetMap(center=center,
zoom=zoom,
maptype="terrain",
destfile="citimap.png",
)
mymarkers <- start_stations %>%
select(start_station_latitude, start_station_longitude) %>%
rename(lat = start_station_latitude,
lon = start_station_longitude) %>%
mutate(size = "small",
col = "red",
char = "")
citibikeMap2 <- GetMap.bbox(lonR = range(lon),
latR = range(lat),
center = center,
destfile = "citistations.png",
markers = mymarkers,
zoom = zoom,
maptype = "terrain")
mymarkers <- start_stations %>%
select(start_station_latitude, start_station_longitude) %>%
rename(lat = start_station_latitude,
lon = start_station_longitude) %>%
mutate(size = "small",
col = "red",
char = "") %>%
subset(nrow = 5)
mymarkers
library(RgoogleMaps)
#We are giving the map 1 standard deviation bigger than the ends of the locations
long_min <- min(start_stations$start_station_longitude)
long_max <-  max(start_stations$start_station_longitude)
lat_min <- min(start_stations$start_station_latitude)
lat_max <- min(start_stations$start_station_latitude)
lon <- c(long_min, long_max)
lat <- c(lat_min, lat_max)
center <- c(mean(lat), mean(lon))
zoom <- min(MaxZoom(range(lat), range(lon)))
citibikeMap <- GetMap(center=center,
zoom=zoom,
maptype="terrain",
destfile="citimap.png",
)
mymarkers <- start_stations %>%
select(start_station_latitude, start_station_longitude) %>%
rename(lat = start_station_latitude,
lon = start_station_longitude) %>%
mutate(size = "small",
col = "red",
char = "") %>%
head(4)
citibikeMap2 <- GetMap.bbox(lonR = range(lon),
latR = range(lat),
center = center,
destfile = "citistations.png",
markers = mymarkers,
zoom = zoom,
maptype = "terrain")
citibikeMap2 <- GetMap.bbox(lonR = range(lon),
latR = range(lat),
center = center,
destfile = "citistations.png",
markers = mymarkers,
zoom = 1,
maptype = "terrain")
library(RgoogleMaps)
#We are giving the map 1 standard deviation bigger than the ends of the locations
long_min <- min(start_stations$start_station_longitude)
long_max <-  max(start_stations$start_station_longitude)
lat_min <- min(start_stations$start_station_latitude)
lat_max <- min(start_stations$start_station_latitude)
lon <- c(long_min, long_max)
lat <- c(lat_min, lat_max)
center <- c(mean(lat), mean(lon))
zoom <- min(MaxZoom(range(lat), range(lon)))
citibikeMap <- GetMap(center=center,
zoom=zoom,
maptype="terrain",
destfile="citimap.png",
)
mymarkers <- start_stations %>%
select(start_station_latitude, start_station_longitude) %>%
rename(lat = start_station_latitude,
lon = start_station_longitude) %>%
mutate(size = "small",
col = "red",
char = "") %>%
head(4)
citibikeMap2 <- GetMap.bbox(lonR = range(lon),
latR = range(lat),
center = center,
destfile = "citistations.png",
markers = mymarkers,
zoom = 10,
maptype = "terrain")
citibikeMap2 <- GetMap.bbox(lonR = range(lon),
latR = range(lat),
center = center,
destfile = "citistations.png",
markers = mymarkers,
zoom = 12,
maptype = "terrain")
citibikeMap2 <- GetMap.bbox(lonR = range(lon),
latR = range(lat),
center = center,
destfile = "citistations.png",
markers = mymarkers,
zoom = 11,
maptype = "terrain")
mymarkers <- start_stations %>%
select(start_station_latitude, start_station_longitude) %>%
rename(lat = start_station_latitude,
lon = start_station_longitude) %>%
mutate(size = "small",
col = "red",
char = "") %>%
head(100)
citibikeMap2 <- GetMap.bbox(lonR = range(lon),
latR = range(lat),
center = center,
destfile = "citistations.png",
markers = mymarkers,
zoom = 11,
maptype = "terrain")
mymarkers <- start_stations %>%
select(start_station_latitude, start_station_longitude) %>%
rename(lat = start_station_latitude,
lon = start_station_longitude) %>%
mutate(size = "small",
col = "red",
char = "")
citibikeMap2 <- GetMap.bbox(lonR = range(lon),
latR = range(lat),
center = center,
destfile = "citistations.png",
markers = mymarkers,
zoom = 11,
maptype = "terrain")
mymarkers <- start_stations %>%
select(start_station_latitude, start_station_longitude) %>%
rename(lat = start_station_latitude,
lon = start_station_longitude) %>%
mutate(size = "small",
col = "red",
char = "") %>%
head(475)
citibikeMap2 <- GetMap.bbox(lonR = range(lon),
latR = range(lat),
center = center,
destfile = "citistations.png",
markers = mymarkers,
zoom = 11,
maptype = "terrain")
mymarkers <- start_stations %>%
select(start_station_latitude, start_station_longitude) %>%
rename(lat = start_station_latitude,
lon = start_station_longitude) %>%
mutate(size = "small",
col = "red",
char = "") %>%
head(400)
citibikeMap2 <- GetMap.bbox(lonR = range(lon),
latR = range(lat),
center = center,
destfile = "citistations.png",
markers = mymarkers,
zoom = 11,
maptype = "terrain")
mymarkers <- start_stations %>%
select(start_station_latitude, start_station_longitude) %>%
rename(lat = start_station_latitude,
lon = start_station_longitude) %>%
mutate(size = "small",
col = "red",
char = "") %>%
head(200)
citibikeMap2 <- GetMap.bbox(lonR = range(lon),
latR = range(lat),
center = center,
destfile = "citistations.png",
markers = mymarkers,
zoom = 11,
maptype = "terrain")
mymarkers <- start_stations %>%
select(start_station_latitude, start_station_longitude) %>%
rename(lat = start_station_latitude,
lon = start_station_longitude) %>%
mutate(size = "small",
col = "red",
char = "") %>%
head(100)
citibikeMap2 <- GetMap.bbox(lonR = range(lon),
latR = range(lat),
center = center,
destfile = "citistations.png",
markers = mymarkers,
zoom = 11,
maptype = "terrain")
mymarkers <- start_stations %>%
select(start_station_latitude, start_station_longitude) %>%
rename(lat = start_station_latitude,
lon = start_station_longitude) %>%
mutate(size = "small",
col = "red",
char = "") %>%
sample(100)
mymarkers <- start_stations %>%
select(start_station_latitude, start_station_longitude) %>%
rename(lat = start_station_latitude,
lon = start_station_longitude) %>%
mutate(size = "small",
col = "red",
char = "")
View(mymarkers)
mymarkers <- start_stations %>%
select(start_station_latitude, start_station_longitude) %>%
rename(lat = start_station_latitude,
lon = start_station_longitude) %>%
mutate(size = "small",
col = "red",
char = "") %>%
sample_n(100)
citibikeMap2 <- GetMap.bbox(lonR = range(lon),
latR = range(lat),
center = center,
destfile = "citistations.png",
markers = mymarkers,
zoom = 11,
maptype = "terrain")
mymarkers
install.packages("rworldmap")
?rworldmap
??rworldmap
install.packages("rgdal")
??rgdal
library(ggplot2)
library(rgdal)
counties <- readOGR("nybb_16c/nybb.shp", layer="nybb")
ggplot() +
geom_polygon(data = counties,
aes(x=long, y=lat, group=group))
View(stations)
View(stations)
ggplot() +
geom_point(data = stations,
aes(x = start_station_longitude,
y = start_station_latitude),
colore = "red")
ggplot() +
geom_point(data = stations,
aes(x = start_station_longitude,
y = start_station_latitude),
color = "red")
# map the counties
ggplot() +
geom_polygon(data = counties,
aes(x=long, y=lat, group=group))
ggplot() +
geom_point(data = stations,
aes(x = start_station_longitude,
y = start_station_latitude),
color = "red")
ggplot() +
geom_polygon(data = counties,
aes(x = long,
y = lat,
grou = group)) +
geom_point(data = stations,
aes(x = start_station_longitude,
y = start_station_latitude))
# map the counties
nymap <- ggplot() +
geom_polygon(data = counties,
aes(x=long, y=lat, group=group))
ggplot() +
geom_point(data = stations,
aes(x = start_station_longitude,
y = start_station_latitude),
color = "red")
nymap +
geom_point(data = stations,
aes(x = start_station_longitude,
y = start_station_latitude))
nymap + coord_map()
install.packages("mapproj")
nymap + coord_map()
nymap + coord_map("cylindrical")
proj4string(counties)
class(mapdata)
class(start_stations)
## [1] "data.frame"
coordinates(start_stations)<-~longitude+latitude
coordinates(start_stations)<-~start_station_longitude+start_station_latitude
class(start_stations)
## [1] "data.frame"
coordinates(start_stations)<-~start_station_longitude+start_station_latitude
class(start_stations)
proj4string(start_stations) # nope
proj4string(start_stations)<-CRS("+proj=longlat +datum=NAD83")
mapdata<-spTransform(start_stations, CRS(proj4string(counties)))
identical(proj4string(start_stations),proj4string(counties))
identical(proj4string(start_stations),proj4string(counties))
mapdata <- data.frame(mapdata)
mapdata <- data.frame(mapdata)
# We're not dealing with lat/long but with x/y
# this is not necessary but for clarity change variable names
names(mapdata)[names(mapdata)=="longitude"]<-"x"
names(mapdata)[names(mapdata)=="latitude"]<-"y"
# now create the map
ggplot() +geom_polygon(data=counties, aes(x=long, y=lat, group=group))+  geom_point(data=mapdata, aes(x=x, y=y), color="red")
View(mapdata)
View(mapdata)
mapdata <- data.frame(mapdata)
# We;'re not dealing with lat/long but with x/y
# this is not necessary but for clarity change variable names
names(mapdata)[names(mapdata)=="start_station_longitude"]<-"x"
names(mapdata)[names(mapdata)=="start_station_latitude"]<-"y"
# now create the map
ggplot() +geom_polygon(data=counties, aes(x=long, y=lat, group=group))+  geom_point(data=mapdata, aes(x=x, y=y), color="red")
ggplot() +
geom_polygon(data=counties, aes(x=long, y=lat, group=group), fill="grey40",
colour="grey90", alpha=1)+
labs(x="", y="", title="Building Area Within 1000m")+ #labels
theme(axis.ticks.y = element_blank(),axis.text.y = element_blank(), # get rid of x ticks/text
axis.ticks.x = element_blank(),axis.text.x = element_blank(), # get rid of y ticks/text
plot.title = element_text(lineheight=.8, face="bold", vjust=1))+ # make title bold and add space
geom_point(aes(x=x, y=y, color=buildarea), data=mapdata, alpha=1, size=3, color="grey20")+# to get outline
geom_point(aes(x=x, y=y, color=buildarea), data=mapdata, alpha=1, size=2)+
scale_colour_gradientn("Building\narea (sq-km)",
colours=c( "#f9f3c2","#660000"))+ # change color scale
coord_equal(ratio=1) # square plot to avoid the distortion
??buildarea
ggplot() +
geom_polygon(data=counties, aes(x=long, y=lat, group=group), fill="grey40",
colour="grey90", alpha=1)+
labs(x="", y="", title="Building Area Within 1000m")+ #labels
theme(axis.ticks.y = element_blank(),axis.text.y = element_blank(), # get rid of x ticks/text
axis.ticks.x = element_blank(),axis.text.x = element_blank(), # get rid of y ticks/text
plot.title = element_text(lineheight=.8, face="bold", vjust=1))+ # make title bold and add space
geom_point(aes(x=x, y=y), data=mapdata, alpha=1, size=3, color="grey20")+# to get outline
geom_point(aes(x=x, y=y), data=mapdata, alpha=1, size=2)+
scale_colour_gradientn("Building\narea (sq-km)",
colours=c( "#f9f3c2","#660000"))+ # change color scale
coord_equal(ratio=1) # square plot to avoid the distortion
View(stations)
View(stations)
View(mymarkers)
View(mymarkers)
View(mapdata)
View(mapdata)
View(citibike_clean)
